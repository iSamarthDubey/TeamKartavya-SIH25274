Here’s the final, “best-for-prototyping-now, scalable-later” stack.

- Mobile (farmer app)
  - React Native (Expo) + TypeScript
  - NativeWind (Tailwind for RN), React Navigation
  - Zustand (state), Axios, AsyncStorage
  - Victory Native (charts)

- Web (admin/FPO)
  - Next.js 14 (App Router) + TypeScript
  - Tailwind CSS + shadcn/ui
  - Recharts, React Hook Form + Zod

- Backend API
  - Node.js 20 + Express + TypeScript
  - Supabase JS client (DB/Auth/Storage)
  - Zod (validation), Swagger/OpenAPI
  - Socket.io (real-time), Winston/Pino (logs)
  - Helmet, CORS, rate limiting

- Database/Auth/Storage
  - PostgreSQL (Supabase) with RLS
  - Supabase Auth (Phone OTP + Email)
  - Supabase Storage (files)

- Cache and real-time
  - Upstash Redis (cache, rate-limit)
  - Socket.io channels (price/contract updates)

- ML service
  - Python 3.11 + FastAPI
  - Prophet, Pandas, NumPy
  - Deployed on Railway, /predict endpoint

- Blockchain plan
  - Phase 1: SHA-256 hashing + IPFS (Pinata) for contract PDFs
  - Phase 2: Polygon (Mumbai → Mainnet), Solidity + Hardhat + Ethers

- Hosting/DevOps
  - Vercel (web), Expo EAS (APK), Railway (backend + ML)
  - Supabase (DB/Auth/Storage), Cloudflare CDN (optional)
  - GitHub Actions (CI/CD)

- Testing
  - Jest + Supertest (API), Playwright (web E2E)
  - Detox (mobile E2E, optional), Pytest (ML)

- Tooling
  - ESLint + Prettier, Husky + lint-staged, Commitlint
  - npm (or pnpm), Node LTS v20

- Data sources
  - Agmarknet (APMC prices), NCDEX historical, OpenWeather

Locked for MVP; upgrade later to Polygon, Prisma ORMs, queue (BullMQ), and native apps if needed.